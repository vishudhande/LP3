# -*- coding: utf-8 -*-
"""ICS_AES.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hWCV-4ozosrqXnLG-1VcLKoXhIkhj2Js
"""

from Crypto.Cipher import AES

!pip install pycrypto

def paddedKey(key):
    while len(key) % 8 !=0:
        key +=' '
    return key

def paddedText(text):
    while len(text) % 16 != 0:
        text += ' '
    return text

plain_input = input("Enter the text to be encrypted: ")
plain = paddedText(plain_input)

key_input = input("Enter in a key between 16 and 32 characters: ")
key = paddedKey(key_input)

if(len(key_input)< 16 & len(key_input)> 32):
 print("key must be between 16 and 32 characters!")

cipher = AES.new(key)
ciphertext = cipher.encrypt(plain)
print(ciphertext)

cleartext = cipher.decrypt(ciphertext)
print(cleartext)